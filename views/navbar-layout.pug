doctype html
html
    head
        include metaheader
    body
        nav.navbar.navbar-expand-lg.navbar-dark.bg-primary
            span.navbar-brand.mb-0.h1 COVID-19 Dashboard (SG)
            button.navbar-toggler(type='button', data-toggle='collapse', data-target='#navbarSupportedContent', aria-controls='navbarSupportedContent', aria-expanded='false', aria-label='Toggle Navigation')
                span.navbar-toggler-icon
            .collapse.navbar-collapse#navbarSupportedContent
                ul.navbar-nav.mr-auto
                    li.nav-item#nbhome
                        a.nav-link(href="/") Home
                    li.nav-item#nbcd
                        a.nav-link(href="/casehistory") Case Details
                    li.nav-item#nbstats
                        a.nav-link(href="/statistics") Daily Statistics
                    li.nav-item.dropdown#nbgraphs
                        a.nav-link.dropdown-toggle#navbarDDLGraph(href='#', role='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false') Graphs
                        .dropdown-menu(aria-labelledby='navbarDDLGraph')
                            h6.dropdown-header Cases
                            a.dropdown-item(href="/graph/cumulative") Cumulative
                            a.dropdown-item(href="/graph/active") Active
                            a.dropdown-item(href="/graph/confirmed") Confirmed
                            a.dropdown-item(href="/graph/discharged") Discharged
                            a.dropdown-item(href="/graph/confirmeddischarged") Total Cases
                            a.dropdown-item(href="/graph/casetypes") Case Types
                            .dropdown-divider
                            h6.dropdown-header Quarantine Orders
                            a.dropdown-item(href="/graph/quosummary") Summary
                            a.dropdown-item(href="/graph/quodaily") Issued (Daily)
                            a.dropdown-item(href="/graph/quodetail") Categorized
                            .dropdown-divider
                            h6.dropdown-header More Graphs Coming Soon
                            a.dropdown-item.disabled(href="#") Coming Soon!
                    li.nav-item
                        a.nav-link(href="https://covidsitrep.moh.gov.sg/", target="_blank") MOH Situation Report
                    if loggedIn
                        li.nav-item.dropdown#nbadmin
                            a.nav-link.dropdown-toggle#navbarDDLAdm(href='#', role='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false') Administration
                            .dropdown-menu(aria-labelledby='navbarDDLAdm')
                                h6.dropdown-header Data Management
                                a.dropdown-item(href="/admin/add") Add new day
                                a.dropdown-item(href="/admin/updateDelta") Recalculate Deltas
                                a.dropdown-item(href="/admin/exportData") Export data
                                h6.dropdown-header Coming Soon
                                a.dropdown-item.disabled(href="#") Edit data
                if loggedIn
                    .my-2.my-lg-0.form-inline
                        span.navbar-text.mr-2.text-white Logged in as #{username}
                        a.nav-item.nav-link.btn.btn-danger#logout(href='#') Logout
                else
                    .my-2.my-lg-0
                        a.nav-item.nav-link.btn.btn-light(href='/login') Login

        // Load jQuery first before anything else
        script(src='https://code.jquery.com/jquery-3.5.1.min.js', integrity='sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=', crossorigin='anonymous')
        .largepadding
            block content
        include metafooter
        script.
            const firebaseConfig = !{fbConfig};
            const toRefToken = #{refreshToken};
            const isLoggedIn = #{loggedIn};
            function cac() {let chk = document.cookie.split('; ').find(row => row.startsWith('authToken')); if (chk) return chk.split('=')[1]; else return "";}
            $(document).ready(function() {
                $(`#nb#{route}`).toggleClass('active');
                firebase.initializeApp(firebaseConfig);
                console.log("Initialized Firebase");
                firebase.auth().onAuthStateChanged(function (user) {
                    if (user)
                        user.getIdToken(false).then(function (idToken) {
                        let match = true;
                        if (cac().length !== 0)
                            if (cac() !== idToken) match = false;
                        if (idToken) {
                            document.cookie = `authToken=${idToken}; path=/;`;
                            if (!match || (!isLoggedIn && window.location.pathname !== '/login')) window.location.reload(); // Reload to fix authentication
                        }
                        else document.cookie = 'authToken=; path=/;';
                        });
                    else if (toRefToken) {
                        document.cookie = 'authToken=; path=/;'; // Not authenticated
                        window.location.reload();
                    }
                });
                $('#logout').click(function (e) {
                    firebase.auth().signOut().catch(function (err) {
                        console.log(err);
                    }).then(function () {
                        document.cookie = 'authToken=; path=/;';
                        window.location.reload();
                    })
                })
            })